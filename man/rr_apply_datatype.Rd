% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rr_apply_datatype.R
\name{rr_apply_datatype}
\alias{rr_apply_datatype}
\title{Apply registers-style datatypes to fields}
\usage{
rr_apply_datatype(x, datatype, cardinality, apply_iso_8601 = TRUE)
}
\arguments{
\item{x}{Character vector (a field of a register).}

\item{datatype}{Name of the datatype to apply: currently one of \code{"curie"},
\code{"url"}, \code{"datetime"}, \code{"string"}, \code{"integer"} and \code{"text"}.  Unrecognised
datatypes will be returned unaltered.}

\item{cardinality}{Character, one of \code{"1"} and \code{"n"} to say whether each
element of \code{x} contains multiple values separated by semicolons.}

\item{apply_iso_8601}{Logical, whether to parse ISO8601 strings as datetimes
with \code{\link[parsedate:parse_iso_8601]{parsedate::parse_iso_8601()}}, otherwise leave as a string.  Partial
datetimes are parsed as the earliest possible datetime, e.g. \code{"2018"}
becomes \code{"2018-01-01 UTC"}.}
}
\description{
Registers use their own datatypes. This function converts character vectors
to the equivalent R datatypes, handling cardinality='n'.
}
\examples{
rr_apply_datatype("2014-04", "datetime")
}
