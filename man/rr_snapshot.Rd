% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rr_snapshot.R
\name{rr_snapshot}
\alias{rr_snapshot}
\title{A snapshot of a whole register}
\usage{
rr_snapshot(register, sequence = c("entry-number", "timestamp"),
  maximum = NULL, include_maximum = TRUE, parse_datetimes = FALSE)
}
\arguments{
\item{register}{An object of class \code{register}, returned by \code{\link[=rr_register]{rr_register()}}.}

\item{sequence}{One of \code{"entry-number"} (default) or \code{"timestamp"}.  The
snapshot is taken at the \code{maximum} value of this field of
\code{register$entries}.}

\item{maximum}{An \code{integer} if \code{sequence} is \code{"entry-number" or}POSIXct\code{if}sequence\code{is}"timestamp"\code{, giving the time at which to take the snapshot. Only the latest entry up to this value will be kept, per}key`.  By default
it is the maximum of all entries, to return the most recent state of the
register.}

\item{include_maximum}{Logical, whether to include entries whose
\code{entry-number} or \code{timestamp} equals \code{maximum}.}

\item{parse_datetimes}{Logical, whether to parse ISO8601 strings as datetimes
with \code{\link[parsedate:parse_iso_8601]{parsedate::parse_iso_8601()}}, otherwise leave as a string.  Partial
datetimes are parsed as the earliest possible datetime, e.g. \code{"2018"}
becomes \code{"2018-01-01 UTC"}.}
}
\value{
A tibble of records (latest entry per key).
}
\description{
Returns a register as it was at a given time, with no history
and no future.

Use \code{\link[=rr_records]{rr_records()}} for snapshots of specifically a register's schema or its
data, but without adjusting the data to the schema of the same time.
}
\details{
A record is the latest entry for a given key.  'Latest' can be either the
maximum \code{entry-number} (recommended), or the maximum \code{timestamp}.  An entry
\code{timestamp} may be \code{NA}, and may not be unique.  If the \code{timestamp} of any
entry of a given key is \code{NA}, then no record for that key will be returned.
If the \code{timestamp} is not unique, then the entry with the maximum
\code{entry-number} will be chosen.
}
\examples{
country <- rr_register("country")
snapshot <- rr_snapshot(country)

nrow(country$data)
nrow(snapshot$data)

country$schema$custodian
snapshot$schema$custodian
}
